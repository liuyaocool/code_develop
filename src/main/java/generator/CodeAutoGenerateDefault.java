package generator;

import generator.utils.FileUtil;
import org.apache.maven.plugin.AbstractMojo;
import org.apache.maven.plugin.MojoExecutionException;
import org.apache.maven.plugin.MojoFailureException;
import org.apache.maven.plugins.annotations.LifecyclePhase;
import org.apache.maven.plugins.annotations.Mojo;
import org.apache.maven.plugins.annotations.Parameter;
import org.apache.maven.plugins.annotations.ResolutionScope;

@Mojo(
		name = "default",
		defaultPhase = LifecyclePhase.GENERATE_SOURCES,
		requiresDependencyResolution = ResolutionScope.TEST
)
public class CodeAutoGenerateDefault extends AbstractMojo{

	private ThreadLocal<ClassLoader> savedClassloader = new ThreadLocal<>();

	//在调用项目pom的plugin中的configuration标签下定义
	@Parameter(property = "jdbcPropertiesUri")
	private String jdbcPropertiesUri;

	@Override
	public void execute() throws MojoExecutionException, MojoFailureException {

		//项目路径
		String projectPath = System.getProperty("user.dir") + "\\src\\main\\";
		String controllerPath = FileUtil.getFolder(projectPath + "java\\", "controller");
		String servicePath = FileUtil.getFolder(projectPath + "java\\", "service");
		String mapperJavaPath = FileUtil.getFolder(projectPath + "java\\", "mapper");
		String mapperXmlPath = FileUtil.getFolder(projectPath + "resources\\", "mapper");
		String jspPath = FileUtil.getFolder(projectPath + "resources\\", "jap");
		String jsPath = FileUtil.getFolder(projectPath + "resources\\", "js");
		String cssPath = FileUtil.getFolder(projectPath + "resources\\", "css");

	}

	@SuppressWarnings("all")
	public static void testCreate(){
		//项目路径
		String projectPath = System.getProperty("user.dir") + "\\src\\main\\";
		String controllerPath = FileUtil.getFolder(projectPath + "java\\", "controller");
		String servicePath = FileUtil.getFolder(projectPath + "java\\", "service");
		String mapperJavaPath = FileUtil.getFolder(projectPath + "java\\", "mapper");
		String mapperXmlPath = FileUtil.getFolder(projectPath + "resources\\", "mapper");
		String jspPath = FileUtil.getFolder(projectPath + "resources\\", "jap");
		String jsPath = FileUtil.getFolder(projectPath + "resources\\", "js");
		String cssPath = FileUtil.getFolder(projectPath + "resources\\", "css");

		String pkgName = controllerPath.replace(projectPath + "java\\","");
		pkgName = pkgName.replace("\\controller", "");
		pkgName = "package" + pkgName.replace("\\", ".");

		//获得表名
		String tableName = "auth_server_USER_TB";
		tableName = tableName.toLowerCase();
		String[] tableNames = tableName.split("_");
		tableName = "";
		for (int i = 0; i < tableNames.length; i++) {
			tableName += tableNames[i].substring(0, 1).toUpperCase() + tableNames[i].substring(1);
		}

		FileUtil.getFolder(projectPath + "resources\\", "mapper");

	}

	private static void createController(String tableName, String filePath, String pkgName){
		StringBuffer sb = new StringBuffer(pkgName);
		sb.append(".controller\n\n")
		.append("");


	}

	private static void createJavaMapper(String tableName, String filePath, String pkgName){
		StringBuffer sb = new StringBuffer(pkgName);
		sb.append(".mapper\n\n")
				.append("");
	}

}
