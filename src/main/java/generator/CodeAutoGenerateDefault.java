package generator;

import generator.utils.FileUtil;
import org.apache.maven.plugin.AbstractMojo;
import org.apache.maven.plugin.MojoExecutionException;
import org.apache.maven.plugin.MojoFailureException;
import org.apache.maven.plugins.annotations.LifecyclePhase;
import org.apache.maven.plugins.annotations.Mojo;
import org.apache.maven.plugins.annotations.Parameter;
import org.apache.maven.plugins.annotations.ResolutionScope;

import java.io.File;
import java.util.List;

@Mojo(
		name = "default",
		defaultPhase = LifecyclePhase.GENERATE_SOURCES,
		requiresDependencyResolution = ResolutionScope.TEST
)
public class CodeAutoGenerateDefault extends AbstractMojo{

	private ThreadLocal<ClassLoader> savedClassloader = new ThreadLocal<>();

	//在调用项目pom的plugin中的configuration标签下定义
	@Parameter(
			property = "ymlPath",
			defaultValue = "${project.basedir}/src/main/resources/application.yml"
	)
	private File ymlPath;
	@Parameter(property = "jdbcDriver")
	private String jdbcDriver;
	@Parameter(property = "jdbcUrl")
	private String jdbcUrl;
	@Parameter(property = "jdbcUsername")
	private String jdbcUsername;
	@Parameter(property = "jdbcPwd")
	private String jdbcPwd;
	@Parameter(property = "jdbcUrl",required = true)
	private String tableName;

	@Override
	public void execute() throws MojoExecutionException, MojoFailureException {

		//项目路径
		String projectPath = System.getProperty("user.dir") + "\\src\\main\\";
		String controllerPath = FileUtil.getFolder(projectPath + "java\\", "controller");
		String servicePath = FileUtil.getFolder(projectPath + "java\\", "service");
		String mapperJavaPath = FileUtil.getFolder(projectPath + "java\\", "mapper");
		String mapperXmlPath = FileUtil.getFolder(projectPath + "resources\\", "mapper");
		String jspPath = FileUtil.getFolder(projectPath + "resources\\", "jap");
		String jsPath = FileUtil.getFolder(projectPath + "resources\\", "js");
		String cssPath = FileUtil.getFolder(projectPath + "resources\\", "css");


		SqlRunner sr = new SqlRunner(
				"",
				"oracle.jdbc.OracleDriver",
				"jdbc:oracle:thin:@192.168.1.231:1521/zhuolu",
				"cms",
				"zhuolu777",
				"T_AUTH_USER_INFO_TB"
		);
		List ss= sr.executeScript();
	}

	@SuppressWarnings("all")
	public static void testCreate(){
		//项目路径
		String projectPath = System.getProperty("user.dir") + "\\src\\main\\";
		String controllerPath = FileUtil.getFolder(projectPath + "java\\", "controller");
		String servicePath = FileUtil.getFolder(projectPath + "java\\", "service");
		String mapperJavaPath = FileUtil.getFolder(projectPath + "java\\", "mapper");
		String mapperXmlPath = FileUtil.getFolder(projectPath + "resources\\", "mapper");
		String jspPath = FileUtil.getFolder(projectPath + "resources\\", "jap");
		String jsPath = FileUtil.getFolder(projectPath + "resources\\", "js");
		String cssPath = FileUtil.getFolder(projectPath + "resources\\", "css");

		String pkgName = controllerPath.replace(projectPath + "java\\","");
		pkgName = pkgName.replace("\\controller", "");
		pkgName = "package" + pkgName.replace("\\", ".");

		//获得表名
		String tableName = FileUtil.stringFormat("auth_server_USER_TB", true);

		FileUtil.getFolder(projectPath + "resources\\", "mapper");

	}

	private static void createController(String tableName, String filePath, String pkgName){
		StringBuffer sb = new StringBuffer(pkgName);
		sb.append(".controller\n\n")
		.append("");


	}

	private static void createJavaMapper(String tableName, String filePath, String pkgName){
		StringBuffer sb = new StringBuffer(pkgName);
		sb.append(".mapper\n\n")
				.append("");
	}

}
